{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6TVQf9M3EoHyGmBY7ET5W",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Michelle-sz/Estrutura-de-Dados/blob/main/Atividade%2007%20-%20Sistema%20To-do%20list%20com%20filas\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Atividade 07 - Sistema To-do list com filas**\n",
        "\n",
        "Alunos: Michelle de Sales Silva\n",
        "\n",
        "Stephan Lucca Melo dos Santos"
      ],
      "metadata": {
        "id": "mesSz7qcvj26"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MaM-gzP_nx-H",
        "outputId": "cf52195d-f0c1-4cfc-8b09-398720ab9365"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 1\n",
            "Descrição da tarefa: Estudar\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 1\n",
            "Descrição da tarefa: Ir para academia\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 1\n",
            "Descrição da tarefa: Arrumar mochila\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 3\n",
            "Próxima tarefa: Estudar\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 2\n",
            "Tarefa concluída: Estudar\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 2\n",
            "Tarefa concluída: Ir para academia\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 2\n",
            "Tarefa concluída: Arrumar mochila\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 2\n",
            "Sem tarefas pendentes.\n",
            "\n",
            "1 - Adicionar tarefa\n",
            "2 - Concluir próxima tarefa\n",
            "3 - Ver tarefa pendente\n",
            "4 - Sair\n",
            "Escolha: 4\n",
            "Saindo...\n"
          ]
        }
      ],
      "source": [
        "# Use a classe No para representar cada tarefa.\n",
        "class No:\n",
        "    def __init__(self, dado):\n",
        "        self.dado = dado\n",
        "        self.proximo = None\n",
        "\n",
        "\n",
        "# Crie a classe Fila\n",
        "class Fila:\n",
        "    def __init__(self):\n",
        "        self.inicio = None\n",
        "        self.fim = None\n",
        "\n",
        "    # enfileirar(dado): adiciona nova tarefa à fila.\n",
        "    def enfileirar(self, dado):\n",
        "        novo = No(dado)\n",
        "        if self.fim:\n",
        "            self.fim.proximo = novo\n",
        "        self.fim = novo\n",
        "        if not self.inicio:\n",
        "            self.inicio = novo\n",
        "\n",
        "    # desenfileirar(): remove a próxima tarefa a ser realizada.\n",
        "    def desenfileirar(self):\n",
        "        if self.esta_vazia():\n",
        "            return \"Sem tarefas pendentes.\"\n",
        "        tarefa = self.inicio.dado\n",
        "        self.inicio = self.inicio.proximo\n",
        "        if not self.inicio:\n",
        "            self.fim = None\n",
        "        return f\"Tarefa concluída: {tarefa}\"\n",
        "\n",
        "    # esta_vazia(): verifica se a fila está vazia.\n",
        "    def esta_vazia(self):\n",
        "        return self.inicio is None\n",
        "\n",
        "\n",
        "    def ver_primeira(self):\n",
        "        if self.esta_vazia():\n",
        "            return \"Nenhuma tarefa na fila.\"\n",
        "        return f\"Próxima tarefa: {self.inicio.dado}\"\n",
        "\n",
        "\n",
        "#**************************************\n",
        "\n",
        "#Seu programa deverá mostrar um menu\n",
        "\n",
        "\n",
        "\n",
        "fila = Fila()\n",
        "\n",
        "while True:\n",
        "    print(\"\\n1 - Adicionar tarefa\")\n",
        "    print(\"2 - Concluir próxima tarefa\")\n",
        "    print(\"3 - Ver tarefa pendente\")\n",
        "    print(\"4 - Sair\")\n",
        "\n",
        "    opcao = input(\"Escolha: \")\n",
        "\n",
        "    # (pergunta ao usuário a descrição da tarefa e a adiciona à fila)\n",
        "    if opcao == '1':\n",
        "        desc = input(\"Descrição da tarefa: \")\n",
        "        fila.enfileirar(desc)\n",
        "\n",
        "    # (remove e exibe a tarefa mais antiga da fila como \"concluída\")\n",
        "    elif opcao == '2':\n",
        "        print(fila.desenfileirar())\n",
        "\n",
        "    # (mostra a tarefa pendente na fila, ou seja, a próxima a ser feita)\n",
        "    elif opcao == '3':\n",
        "        print(fila.ver_primeira())\n",
        "\n",
        "    # (encerra o programa)\n",
        "    elif opcao == '4':\n",
        "        print(\"Saindo...\")\n",
        "        break\n",
        "\n",
        "    else:\n",
        "        print(\"Opção inválida.\")\n"
      ]
    }
  ]
}